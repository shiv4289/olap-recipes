services:
  rest:
    image: tabulario/iceberg-rest:1.6.0
    ports:
      - 8189:8181
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=ClickHouse_Minio_P@ssw0rd
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse-rest/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/8181"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - iceberg_net
  minio:
    image: minio/minio:RELEASE.2024-07-31T05-46-26Z
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=ClickHouse_Minio_P@ssw0rd
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse-rest.minio
    ports:
      - "9002:9000"
      - "9003:9001"
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    depends_on:
      - minio
    networks:
      - iceberg_net
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    environment:
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=ClickHouse_Minio_P@ssw0rd
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio ClickHouse_Minio_P@ssw0rd) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse-rest;
      /usr/bin/mc mb minio/warehouse-rest --ignore-existing;
      /usr/bin/mc policy set public minio/warehouse-rest;
      tail -f /dev/null
      "

networks:
  iceberg_net:
    driver: bridge